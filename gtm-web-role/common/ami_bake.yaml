---

AWSTemplateFormatVersion: 2010-09-09
Description: |
  A template that contains a "custom AMI Bake" component for a Cumulus CICD pipeline.
  Bakes based on a "bakespec.yaml" provided in the source.
  This is like "custom_bake.yaml" but with some changes to make it conducive to building AMIs.

Parameters:
  # Mandatory tag parameters
  ApplicationAssetInsightId:
    Description: Application Asset Insight Id
    Type: String
  ResourceOwner:
    Description: Resource Owner
    Type: String
  EnvironmentType:
    AllowedValues: ["PRODUCTION", "PRE-PRODUCTION", "INTEGRATION TESTING", "QUALITY ASSURANCE", "DEVELOPMENT", "LAB"]
    Description: Environment Type
    Type: String
  # Common parameters - may be shared with other (non-mutually-exclusive) component templates
  ServiceName:
    Description: |
      The name of the artifact being built. Used to name various things such as pipeline stages and container names.
      Should be unique.
    Type: String
  CustomBakeActionTimeout:
    Description: Bake action timeout in minutes
    Type: String
    Default: '440'
  # Specific action parameters - shouldn't be common to other (non-mutually-exclusive) component templates
  BakeSpecPath:
    Description: |
      "Path to the CodeBuild buildspec file responsible for baking the AMI."
    Type: String
    Default: "cicd/bake/"
  BakeVpcId:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of SSM parameter that contains the ID of the TR VPC
    AllowedValues: [/a205257/cicd/tr-vpc-1-id]
    Default: /a205257/cicd/tr-vpc-1-id
  BakeSubnets:
    Type: AWS::SSM::Parameter::Value<List<String>>
    Description: Name of SSM parameter that contains the private subnets of the TR VPC
    Default: /a205257/cicd/tr-vpc-1-private-subnets
    AllowedValues: [/a205257/cicd/tr-vpc-1-private-subnets]

Resources:
  # yamllint disable rule:line-length
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Stages:
        # This is where a source stage would go.
        # A build stage would go here.
        - Name: Bake
          Actions:
            - Name: Bake  # Bake the actual image (also validates and publishes it)
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: BakeInput  # The previous' stage output should match this so the spec.ymls have consistent names
              OutputArtifacts:
                - Name: DeployInput  # This should match the input name of the next stage.
              Configuration:
                ProjectName:
                  Ref: ImageBakeAction
                PrimarySource: Source
              RunOrder: 1
              # yamllint enable rule:line-length

  ImageBakeAction:
    DependsOn: ImageBakeGroupIngressRule
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: a${ApplicationAssetInsightId}-${ServiceName}-image-bake
      Description: "The 'Bake' action in the 'Bake' stage of the CICD Pipeline components document"
      ServiceRole:
        Fn::Sub: "arn:aws:iam::${AWS::AccountId}:role/service-role/a${ApplicationAssetInsightId}-CICD-Deployment"
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:18.09.0
        EnvironmentVariables:
          - {"Name": "ASSET_ID", "Value": {"Ref": ApplicationAssetInsightId}}
          - {"Name": "ACCOUNT_ID", "Value": {"Ref": "AWS::AccountId"}}
          - {"Name": "REGION", "Value": {"Ref": "AWS::Region"}}
          - {"Name": "RESOURCE_OWNER", "Value": {"Ref": "ResourceOwner"}}
          - {"Name": "ENVIRONMENT_TYPE", "Value": {"Ref": "EnvironmentType"}}
          - {"Name": "SERVICE_NAME", "Value": {"Ref": ServiceName}}
          - {"Name": "PACKER_SECURITY_GROUP_ID", "Value": {"Ref": ImageBakeGroup}}
          - {"Name": "PACKER_VPC_ID", "Value": {"Ref": BakeVpcId}}
          - {"Name": "PACKER_SUBNET_ID", "Value": !Select [ 0, !Ref BakeSubnets ] }
      Source:
        Type: CODEPIPELINE
        BuildSpec:
          Ref: BakeSpecPath
      TimeoutInMinutes:
        Ref: CustomBakeActionTimeout
      Tags:
        - {"Key": "tr:application-asset-insight-id", "Value": {"Ref": ApplicationAssetInsightId}}
        - {"Key": "tr:environment-type", "Value": {"Ref": EnvironmentType}}
        - {"Key": "tr:resource-owner", "Value": {"Ref": ResourceOwner}}
      VpcConfig:
        SecurityGroupIds: !Ref ImageBakeGroup
        Subnets: 
          - !Select [ 0 , !Ref BakeSubnets ]
        VpcId: !Ref BakeVpcId

  ImageBakeGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group that is applied to CodeBuild and Packer instances
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      VpcId: !Ref BakeVpcId

  ImageBakeGroupIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allows instances in image bake group to talk to eachother
      IpProtocol: "-1"
      FromPort: "-1"
      ToPort: "-1"
      GroupId: !Ref ImageBakeGroup
      SourceSecurityGroupId: !Ref ImageBakeGroup
